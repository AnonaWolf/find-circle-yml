#!/usr/bin/env ruby
# frozen_string_literal: true

require 'circleci/audit'
require 'octokit'

require 'uri'
require 'json'
require 'pp'

class Bitbucket
  Repository = Struct.new(:name, :main_branch, :url)
  Configuration = Struct.new(:url)

  attr_reader :user, :password, :team

  def initialize(user, password, team)
    @user = user
    @password = password
    @team = team
  end

  def repositories
    response = request("/repositories/#{team}")
    parsed_response = JSON.parse(response.body)
    parsed_response.fetch('values', []).map do |value|
      Repository.new(
        value.fetch('full_name'),
        value.dig('mainbranch', 'branch') || 'master',
        value.fetch('links').fetch('html').fetch('href')
      )
    end
  end

  def configuration(repository)
    response = request("/repositories/#{repository.name}/src/#{repository.main_branch}/circle.yml?format=meta")
    return unless response.code == '200'
    parsed_response = JSON.parse(response.body)
    commit = parsed_response.fetch('commit', {}).fetch('hash', repository.main_branch)
    path = parsed_response.fetch('path')
    Configuration.new("#{repository.url}/src/#{commit}/#{path}")
  end

  private

  def request(path)
    uri = URI("https://api.bitbucket.org/2.0#{path}")
    Net::HTTP.start(uri.hostname, uri.port, use_ssl: true) do |http|
      request = Net::HTTP::Get.new(uri)
      request.basic_auth(user, password)
      http.request request
    end
  end
end

bitbucket = Bitbucket.new(ENV.fetch('BITBUCKET_USER'), ENV.fetch('BITBUCKET_APP_PASSWORD'), ENV.fetch('BITBUCKET_TEAM'))
bitbucket.repositories.each do |repository|
  if (configuration = bitbucket.configuration(repository))
    puts configuration.url
  end
end

Octokit.auto_paginate = true

github_client = Octokit::Client.new(
  login: ENV.fetch('GITHUB_USER'),
  password: ENV.fetch('GITHUB_ACCESS_TOKEN')
)

repos = github_client.organization_repositories(ENV.fetch('GITHUB_ORGANIZATION'))
repos.each do |repository|
  begin
    puts repository.rels[:contents].get(uri: { path: 'circle.yml' }).data.html_url
  rescue Octokit::NotFound
    next
  end
end
